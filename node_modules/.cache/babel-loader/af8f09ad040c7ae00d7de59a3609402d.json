{"ast":null,"code":"import _objectSpread from \"/Users/alvarodiazvalenzuela/Documents/DesafioLatam/fx_blotter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  fecha: '1969-01-12',\n  bid: 700.00,\n  ask: 700.30,\n  ops: {\n    1: {\n      numop: 1,\n      cliente: 'Santander',\n      fxrate: 'USDCLP',\n      cv: 'Compra',\n      monto: 1000000,\n      precio: 700,\n      editable: false\n    },\n    2: {\n      numop: 2,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Venta',\n      monto: 3000000,\n      precio: 701,\n      editable: false\n    },\n    3: {\n      numop: 3,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Venta',\n      monto: 3000000,\n      precio: 702,\n      editable: false\n    },\n    4: {\n      numop: 4,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Compra',\n      monto: 1000000,\n      precio: 701,\n      editable: false\n    }\n  },\n  nextNumop: 5,\n  posicion: -1000000,\n  compras: 2000000,\n  ppcompra: 700,\n  ventas: 6000000,\n  ppventa: 701,\n  resTrading: 1000000,\n  resPos: -1000000\n};\n\nconst sumaCompras = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto;\n  } else {\n    return acum;\n  }\n};\n\nconst comprasPonderadas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto * op.precio;\n  } else {\n    return acum;\n  }\n};\n\nconst ventasPonderadas = (acum, op) => {\n  if (op.cv === 'Venta') {\n    return acum + op.monto * op.precio;\n  } else {\n    return acum;\n  }\n};\n\nconst sumaVentas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum;\n  } else {\n    return acum + op.monto;\n  }\n};\n\nconst update = (state = initialState, action) => {\n  if (action.type === 'PUNTA') {\n    const compras = state.ops.reduce(sumaCompras, 0);\n    const ventas = state.ops.reduce(sumaVentas, 0);\n    const posicion = compras - ventas;\n    const compPond = state.ops.reduce(comprasPonderadas, 0);\n    const ventPond = state.ops.reduce(ventasPonderadas, 0);\n    const ppcompra = compras > 0 ? compPond / compras : 0;\n    const ppventa = ventas > 0 ? ventPond / ventas : 0;\n    const resTrading = Math.round(Math.min(compras, ventas) * (ppventa - ppcompra));\n    const resPos = Math.round(posicion > 0 ? posicion * (action.bid - ppcompra) : -posicion * (ppventa - action.ask));\n    return _objectSpread({}, state, {\n      bid: action.bid,\n      ask: action.ask,\n      posicion: posicion,\n      compras: compras,\n      ppcompra: ppcompra,\n      ventas: ventas,\n      ppventa: ppventa,\n      resTrading: resTrading,\n      resPos: resPos\n    });\n  }\n\n  if (action.type === 'ELIM_OP') {\n    // eslint-disable-next-line no-restricted-globals\n    const sure = confirm('¿Está seguro de eliminar la operación ' + action.whichOp + '?');\n\n    if (!sure) {\n      return state;\n    }\n\n    const whichOp = parseInt(action.whichOp);\n    const newOps = Object.keys(state.ops).filter(key => state.ops[key].numop !== whichOp);\n    alert(newOps);\n    const compras = newOps.reduce(sumaCompras, 0);\n    const ventas = newOps.reduce(sumaVentas, 0);\n    const posicion = compras - ventas;\n    const compPond = newOps.reduce(comprasPonderadas, 0);\n    const ventPond = newOps.reduce(ventasPonderadas, 0);\n    const ppcompra = compras > 0 ? compPond / compras : 0;\n    const ppventa = ventas > 0 ? ventPond / ventas : 0;\n    const resTrading = Math.round(Math.min(compras, ventas) * (ppventa - ppcompra));\n    const resPos = Math.round(posicion > 0 ? posicion * (state.bid - ppcompra) : -posicion * (ppventa - state.ask));\n    return _objectSpread({}, state, {\n      ops: newOps,\n      posicion: posicion,\n      compras: compras,\n      ppcompra: ppcompra,\n      ventas: ventas,\n      ppventa: ppventa,\n      resTrading: resTrading,\n      resPos: resPos\n    });\n  }\n\n  if (action.type === 'EDIT_OP') {\n    const whichOp = parseInt(action.whichOp);\n    const modOp = state.ops.filter(() => state.ops.id === whichOp);\n    return _objectSpread({}, state, {\n      ops: [...state.ops]\n    });\n  }\n\n  return state;\n};\n\nexport default update;","map":{"version":3,"sources":["/Users/alvarodiazvalenzuela/Documents/DesafioLatam/fx_blotter/src/redux/reducer.js"],"names":["initialState","fecha","bid","ask","ops","numop","cliente","fxrate","cv","monto","precio","editable","nextNumop","posicion","compras","ppcompra","ventas","ppventa","resTrading","resPos","sumaCompras","acum","op","comprasPonderadas","ventasPonderadas","sumaVentas","update","state","action","type","reduce","compPond","ventPond","Math","round","min","sure","confirm","whichOp","parseInt","newOps","Object","keys","filter","key","alert","modOp","id"],"mappings":"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","sourcesContent":["\nconst initialState = {\n  fecha: '1969-01-12',\n  bid: 700.00,\n  ask: 700.30,\n  ops: {\n    1: {numop: 1, cliente: 'Santander', fxrate: 'USDCLP', cv: 'Compra', monto: 1000000, precio: 700, editable: false},\n    2: {numop: 2, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Venta', monto: 3000000, precio: 701, editable: false},\n    3: {numop: 3, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Venta', monto: 3000000, precio: 702, editable: false},\n    4: {numop: 4, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Compra', monto: 1000000, precio: 701, editable: false},\n  }\n  ,\n  nextNumop: 5,\n  posicion: -1000000,\n  compras: 2000000,\n  ppcompra: 700,\n  ventas: 6000000,\n  ppventa: 701,\n  resTrading: 1000000,\n  resPos: -1000000\n}\n\nconst sumaCompras = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto\n  } else {\n    return acum\n  }\n}\n\nconst comprasPonderadas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto * op.precio\n  } else {\n    return acum\n  }\n}\n\nconst ventasPonderadas = (acum, op) => {\n  if (op.cv === 'Venta') {\n    return acum + op.monto * op.precio\n  } else {\n    return acum\n  }\n}\n\nconst sumaVentas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum\n  } else {\n    return acum + op.monto\n  }\n}\n\n\nconst update = (state = initialState, action) => {\n  if (action.type === 'PUNTA') {\n    const compras = state.ops.reduce(sumaCompras, 0)\n    const ventas = state.ops.reduce(sumaVentas, 0)\n    const posicion = compras - ventas\n    const compPond = state.ops.reduce(comprasPonderadas, 0)\n    const ventPond = state.ops.reduce(ventasPonderadas, 0)\n    const ppcompra = compras > 0 ? compPond / compras : 0\n    const ppventa = ventas > 0 ? ventPond / ventas : 0\n    const resTrading = Math.round(Math.min(compras, ventas) * (ppventa - ppcompra))\n    const resPos = Math.round(posicion > 0 ? posicion * (action.bid - ppcompra) : - posicion * (ppventa - action.ask))\n    return {...state, bid: action.bid, ask: action.ask,\n      posicion: posicion,\n      compras: compras, ppcompra: ppcompra,\n      ventas: ventas, ppventa: ppventa,\n      resTrading: resTrading, resPos: resPos}\n  }\n\n  if (action.type === 'ELIM_OP') {\n    // eslint-disable-next-line no-restricted-globals\n    const sure = confirm('¿Está seguro de eliminar la operación ' + action.whichOp + '?')\n    if (!sure) {\n      return state\n    }\n    const whichOp = parseInt(action.whichOp)\n    const newOps = Object.keys(state.ops).filter((key) => state.ops[key].numop !== whichOp)\n    alert(newOps)\n    const compras = newOps.reduce(sumaCompras, 0)\n    const ventas = newOps.reduce(sumaVentas, 0)\n    const posicion = compras - ventas\n    const compPond = newOps.reduce(comprasPonderadas, 0)\n    const ventPond = newOps.reduce(ventasPonderadas, 0)\n    const ppcompra = compras > 0 ? compPond / compras : 0\n    const ppventa = ventas > 0 ? ventPond / ventas : 0\n    const resTrading = Math.round(Math.min(compras, ventas) * (ppventa - ppcompra))\n    const resPos = Math.round(posicion > 0 ? posicion * (state.bid - ppcompra) :\n      - posicion * (ppventa - state.ask))\n    return {...state, ops: newOps, posicion: posicion,\n      compras: compras, ppcompra: ppcompra,\n      ventas: ventas, ppventa: ppventa,\n      resTrading: resTrading, resPos: resPos}\n  }\n\n  if (action.type === 'EDIT_OP') {\n    const whichOp = parseInt(action.whichOp)\n    const modOp = state.ops.filter(() => state.ops.id === whichOp)\n    return {...state, ops: [...state.ops, ]}\n  }\n\n  return state\n}\n\nexport default update"]},"metadata":{},"sourceType":"module"}