{"ast":null,"code":"import _objectSpread from \"/Users/alvarodiazvalenzuela/Documents/DesafioLatam/fx_blotter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nconst sumaCompras = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto;\n  } else {\n    return acum;\n  }\n};\n\nconst comprasPonderadas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto * op.precio;\n  } else {\n    return acum;\n  }\n};\n\nconst ventasPonderadas = (acum, op) => {\n  if (op.cv === 'Venta') {\n    return acum + op.monto * op.precio;\n  } else {\n    return acum;\n  }\n};\n\nconst sumaVentas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum;\n  } else {\n    return acum + op.monto;\n  }\n};\n\nconst initialState = {\n  fecha: '1969-01-12',\n  bid: 700.00,\n  ask: 700.30,\n  ops: {\n    1: {\n      numop: 1,\n      cliente: 'Santander',\n      fxrate: 'USDCLP',\n      cv: 'Compra',\n      monto: 1000000,\n      precio: 700,\n      editable: false\n    },\n    2: {\n      numop: 2,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Venta',\n      monto: 3000000,\n      precio: 701,\n      editable: false\n    },\n    3: {\n      numop: 3,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Venta',\n      monto: 3000000,\n      precio: 702,\n      editable: false\n    },\n    4: {\n      numop: 4,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Compra',\n      monto: 1000000,\n      precio: 701,\n      editable: false\n    }\n  },\n  nextNumop: 5,\n  getOpsArray: function () {\n    return Object.keys(this.ops).map(key => this.ops[key]);\n  },\n  getCompras: function () {\n    const opArr = Object.keys(this.ops).map(key => this.ops[key]);\n    return opArr.reduce(sumaCompras, 0);\n  },\n  getPpcompra: function () {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key]);\n    const compras = opsArray.reduce(sumaCompras, 0);\n    const compPond = opsArray.reduce(comprasPonderadas, 0);\n    return compras > 0 ? compPond / compras : 0;\n  },\n  getVentas: function () {\n    const opArr = Object.keys(this.ops).map(key => this.ops[key]);\n    return opArr.reduce(sumaVentas, 0);\n  },\n  getPpventa: function () {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key]);\n    const ventas = opsArray.reduce(sumaVentas, 0);\n    const ventPond = opsArray.reduce(ventasPonderadas, 0);\n    return ventas > 0 ? ventPond / ventas : 0;\n  },\n  resTrading: 1000000,\n  resPos: -1000000\n};\n\nconst update = (state = initialState, action) => {\n  if (action.type === 'PUNTA') {\n    const opsArray = state.getOpsArray();\n    const compras = state.getCompras();\n    const ventas = state.getVentas();\n    const posicion = compras - ventas;\n    const ppcompra = state.getPpcompra();\n    const ppventa = state.getPpventa();\n    const resTrading = Math.round(Math.min(compras, ventas) * (ppventa - ppcompra));\n    const resPos = Math.round(posicion > 0 ? posicion * (action.bid - ppcompra) : -posicion * (ppventa - action.ask));\n    return _objectSpread({}, state, {\n      bid: action.bid,\n      ask: action.ask,\n      posicion: posicion,\n      compras: compras,\n      ppcompra: ppcompra,\n      ventas: ventas,\n      ppventa: ppventa,\n      resTrading: resTrading,\n      resPos: resPos\n    });\n  }\n\n  if (action.type === 'ELIM_OP') {\n    // eslint-disable-next-line no-restricted-globals\n    const sure = confirm('¿Está seguro de eliminar la operación ' + action.whichOp + '?');\n\n    if (!sure) {\n      return state;\n    }\n\n    const whichOp = parseInt(action.whichOp);\n    const newOpsKeys = Object.keys(state.ops).filter(key => state.ops[key].numop !== whichOp);\n    let newOps = {};\n    let newOpsArray = [];\n\n    for (let key in state.ops) {\n      if (newOpsKeys.includes(key)) {\n        newOps[key] = state.ops[key];\n        newOpsArray.push(state.ops[key]);\n      }\n    }\n\n    const compras = newOpsArray.reduce(sumaCompras, 0);\n    const ventas = newOpsArray.reduce(sumaVentas, 0);\n    const posicion = compras - ventas;\n    const compPond = newOpsArray.reduce(comprasPonderadas, 0);\n    const ventPond = newOpsArray.reduce(ventasPonderadas, 0);\n    const ppcompra = compras > 0 ? compPond / compras : 0;\n    const ppventa = ventas > 0 ? ventPond / ventas : 0;\n    const resTrading = Math.round(Math.min(compras, ventas) * (ppventa - ppcompra));\n    const resPos = Math.round(posicion > 0 ? posicion * (state.bid - ppcompra) : -posicion * (ppventa - state.ask));\n    return _objectSpread({}, state, {\n      ops: newOps,\n      posicion: posicion,\n      compras: compras,\n      ppcompra: ppcompra,\n      ventas: ventas,\n      ppventa: ppventa,\n      resTrading: resTrading,\n      resPos: resPos\n    });\n  }\n\n  if (action.type === 'EDIT_OP') {\n    const whichOp = parseInt(action.whichOp);\n    const modOp = state.ops.filter(() => state.ops.id === whichOp);\n    return _objectSpread({}, state, {\n      ops: [...state.ops]\n    });\n  }\n\n  return state;\n};\n\nexport default update;","map":{"version":3,"sources":["/Users/alvarodiazvalenzuela/Documents/DesafioLatam/fx_blotter/src/redux/reducer.js"],"names":["sumaCompras","acum","op","cv","monto","comprasPonderadas","precio","ventasPonderadas","sumaVentas","initialState","fecha","bid","ask","ops","numop","cliente","fxrate","editable","nextNumop","getOpsArray","Object","keys","map","key","getCompras","opArr","reduce","getPpcompra","opsArray","compras","compPond","getVentas","getPpventa","ventas","ventPond","resTrading","resPos","update","state","action","type","posicion","ppcompra","ppventa","Math","round","min","sure","confirm","whichOp","parseInt","newOpsKeys","filter","newOps","newOpsArray","includes","push","modOp","id"],"mappings":"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","sourcesContent":["\n\nconst sumaCompras = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto\n  } else {\n    return acum\n  }\n}\n\nconst comprasPonderadas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto * op.precio\n  } else {\n    return acum\n  }\n}\n\nconst ventasPonderadas = (acum, op) => {\n  if (op.cv === 'Venta') {\n    return acum + op.monto * op.precio\n  } else {\n    return acum\n  }\n}\n\nconst sumaVentas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum\n  } else {\n    return acum + op.monto\n  }\n}\n\nconst initialState = {\n  fecha: '1969-01-12',\n  bid: 700.00,\n  ask: 700.30,\n  ops: {\n    1: {numop: 1, cliente: 'Santander', fxrate: 'USDCLP', cv: 'Compra', monto: 1000000, precio: 700, editable: false},\n    2: {numop: 2, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Venta', monto: 3000000, precio: 701, editable: false},\n    3: {numop: 3, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Venta', monto: 3000000, precio: 702, editable: false},\n    4: {numop: 4, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Compra', monto: 1000000, precio: 701, editable: false},\n  },\n  nextNumop: 5,\n  getOpsArray: function() {\n    return Object.keys(this.ops).map(key => this.ops[key])\n  },\n  getCompras: function() {\n    const opArr = Object.keys(this.ops).map(key => this.ops[key])\n    return opArr.reduce(sumaCompras, 0)\n  },\n  getPpcompra: function() {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key])\n    const compras = opsArray.reduce(sumaCompras, 0)\n    const compPond = opsArray.reduce(comprasPonderadas, 0)\n    return compras > 0 ? compPond / compras : 0\n  },\n  getVentas: function() {\n  const opArr = Object.keys(this.ops).map(key => this.ops[key])\n  return opArr.reduce(sumaVentas, 0)\n},\n  getPpventa: function() {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key])\n    const ventas = opsArray.reduce(sumaVentas, 0)\n    const ventPond = opsArray.reduce(ventasPonderadas, 0)\n    return ventas > 0 ? ventPond / ventas : 0\n  },\n  resTrading: 1000000,\n  resPos: -1000000\n}\n\nconst update = (state = initialState, action) => {\n  if (action.type === 'PUNTA') {\n    const opsArray = state.getOpsArray()\n    const compras = state.getCompras()\n    const ventas = state.getVentas()\n    const posicion = compras - ventas\n    const ppcompra = state.getPpcompra()\n    const ppventa = state.getPpventa()\n    const resTrading = Math.round(Math.min(compras, ventas) * (ppventa - ppcompra))\n    const resPos = Math.round(posicion > 0 ? posicion * (action.bid - ppcompra) : - posicion * (ppventa - action.ask))\n    return {...state, bid: action.bid, ask: action.ask,\n      posicion: posicion,\n      compras: compras, ppcompra: ppcompra,\n      ventas: ventas, ppventa: ppventa,\n      resTrading: resTrading, resPos: resPos}\n  }\n\n  if (action.type === 'ELIM_OP') {\n    // eslint-disable-next-line no-restricted-globals\n    const sure = confirm('¿Está seguro de eliminar la operación ' + action.whichOp + '?')\n    if (!sure) {\n      return state\n    }\n    const whichOp = parseInt(action.whichOp)\n    const newOpsKeys = Object.keys(state.ops).filter(key => state.ops[key].numop !== whichOp)\n    let newOps = {}\n    let newOpsArray = []\n    for (let key in state.ops) {\n      if (newOpsKeys.includes(key)) {\n        newOps[key] = state.ops[key]\n        newOpsArray.push(state.ops[key])\n      }\n    }\n    const compras = newOpsArray.reduce(sumaCompras, 0)\n    const ventas = newOpsArray.reduce(sumaVentas, 0)\n    const posicion = compras - ventas\n    const compPond = newOpsArray.reduce(comprasPonderadas, 0)\n    const ventPond = newOpsArray.reduce(ventasPonderadas, 0)\n    const ppcompra = compras > 0 ? compPond / compras : 0\n    const ppventa = ventas > 0 ? ventPond / ventas : 0\n    const resTrading = Math.round(Math.min(compras, ventas) * (ppventa - ppcompra))\n    const resPos = Math.round(posicion > 0 ? posicion * (state.bid - ppcompra) :\n      - posicion * (ppventa - state.ask))\n    return {...state, ops: newOps, posicion: posicion,\n      compras: compras, ppcompra: ppcompra,\n      ventas: ventas, ppventa: ppventa,\n      resTrading: resTrading, resPos: resPos}\n  }\n\n  if (action.type === 'EDIT_OP') {\n    const whichOp = parseInt(action.whichOp)\n    const modOp = state.ops.filter(() => state.ops.id === whichOp)\n    return {...state, ops: [...state.ops, ]}\n  }\n\n  return state\n}\n\nexport default update"]},"metadata":{},"sourceType":"module"}