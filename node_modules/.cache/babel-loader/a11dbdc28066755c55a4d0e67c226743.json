{"ast":null,"code":"import _objectSpread from \"/Users/alvarodiazvalenzuela/Documents/DesafioLatam/fx_blotter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nconst sumaCompras = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto;\n  } else {\n    return acum;\n  }\n};\n\nconst comprasPonderadas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto * op.precio;\n  } else {\n    return acum;\n  }\n};\n\nconst ventasPonderadas = (acum, op) => {\n  if (op.cv === 'Venta') {\n    return acum + op.monto * op.precio;\n  } else {\n    return acum;\n  }\n};\n\nconst sumaVentas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum;\n  } else {\n    return acum + op.monto;\n  }\n};\n\nconst initialState = {\n  fecha: '1969-01-12',\n  bid: 700.00,\n  ask: 700.30,\n  ops: {\n    1: {\n      numop: 1,\n      cliente: 'Santander',\n      fxrate: 'USDCLP',\n      cv: 'Compra',\n      monto: 1000000,\n      precio: 700,\n      editable: false\n    },\n    2: {\n      numop: 2,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Venta',\n      monto: 3000000,\n      precio: 701,\n      editable: false\n    },\n    3: {\n      numop: 3,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Venta',\n      monto: 3000000,\n      precio: 702,\n      editable: false\n    },\n    4: {\n      numop: 4,\n      cliente: 'Estado',\n      fxrate: 'USDCLP',\n      cv: 'Compra',\n      monto: 1000000,\n      precio: 701,\n      editable: false\n    }\n  },\n  nextNumop: 5,\n  getOpsArray: function () {\n    return Object.keys(this.ops).map(key => this.ops[key]);\n  },\n  getCompras: function () {\n    const opArr = Object.keys(this.ops).map(key => this.ops[key]);\n    return opArr.reduce(sumaCompras, 0);\n  },\n  getPpcompra: function () {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key]);\n    const compras = opsArray.reduce(sumaCompras, 0);\n    const compPond = opsArray.reduce(comprasPonderadas, 0);\n    return compras > 0 ? compPond / compras : 0;\n  },\n  getVentas: function () {\n    const opArr = Object.keys(this.ops).map(key => this.ops[key]);\n    return opArr.reduce(sumaVentas, 0);\n  },\n  getPpventa: function () {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key]);\n    const ventas = opsArray.reduce(sumaVentas, 0);\n    const ventPond = opsArray.reduce(ventasPonderadas, 0);\n    return ventas > 0 ? ventPond / ventas : 0;\n  },\n  getResTrading: function () {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key]);\n    const compras = opsArray.reduce(sumaCompras, 0);\n    const compPond = opsArray.reduce(comprasPonderadas, 0);\n    const ppcompra = compras > 0 ? compPond / compras : 0;\n    const ventas = opsArray.reduce(sumaVentas, 0);\n    const ventPond = opsArray.reduce(ventasPonderadas, 0);\n    const ppventa = ventas > 0 ? ventPond / ventas : 0;\n    return Math.min(compras, ventas) * (ppventa - ppcompra);\n  },\n  getResPos: function (bid, ask) {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key]);\n    const compras = opsArray.reduce(sumaCompras, 0);\n    const compPond = opsArray.reduce(comprasPonderadas, 0);\n    const ppcompra = compras > 0 ? compPond / compras : 0;\n    const ventas = opsArray.reduce(sumaVentas, 0);\n    const ventPond = opsArray.reduce(ventasPonderadas, 0);\n    const ppventa = ventas > 0 ? ventPond / ventas : 0;\n    const posicion = compras - ventas;\n    return Math.round(posicion > 0 ? posicion * (bid - ppcompra) : -posicion * (ppventa - ask));\n  }\n};\n\nconst update = (state = initialState, action) => {\n  if (action.type === 'PUNTA') {\n    return _objectSpread({}, state, {\n      bid: action.bid,\n      ask: action.ask\n    });\n  }\n\n  if (action.type === 'ELIM_OP') {\n    // eslint-disable-next-line no-restricted-globals\n    const sure = confirm('¿Está seguro de eliminar la operación ' + action.whichOp + '?');\n\n    if (!sure) {\n      return state;\n    }\n\n    const whichOp = parseInt(action.whichOp);\n    const newOpsKeys = Object.keys(state.ops).filter(key => state.ops[key].numop !== whichOp);\n    let newOps = {};\n\n    for (let key in state.ops) {\n      if (newOpsKeys.includes(key)) {\n        newOps[key] = state.ops[key];\n      }\n    }\n\n    return _objectSpread({}, state, {\n      ops: newOps\n    });\n  }\n\n  if (action.type === 'EDIT_OP') {\n    const whichOp = parseInt(action.whichOp);\n    const editable = state.ops[whichOp].editable;\n    return _objectSpread({}, state, {\n      ops: _objectSpread({}, state.ops, {\n        [whichOp]: _objectSpread({}, state.ops[whichOp], {\n          editable: !editable\n        })\n      })\n    });\n  }\n\n  if (action.type === 'EDIT_CELDA') {\n    const celda = action.whichCellOp.slice(0, 2);\n    const prop = {\n      'cl': 'cliente',\n      'fx': 'fxrate',\n      'cv': 'cv',\n      'mn': 'monto',\n      'pr': 'precio'\n    };\n    const op = action.whichCellOp.slice(3);\n    const value = action.value;\n    return _objectSpread({}, state, {\n      ops: _objectSpread({}, state.ops, {\n        [op]: _objectSpread({}, state.ops[op], {\n          [prop[celda]]: value\n        })\n      })\n    });\n  }\n\n  return state;\n};\n\nexport default update;","map":{"version":3,"sources":["/Users/alvarodiazvalenzuela/Documents/DesafioLatam/fx_blotter/src/redux/reducer.js"],"names":["sumaCompras","acum","op","cv","monto","comprasPonderadas","precio","ventasPonderadas","sumaVentas","initialState","fecha","bid","ask","ops","numop","cliente","fxrate","editable","nextNumop","getOpsArray","Object","keys","map","key","getCompras","opArr","reduce","getPpcompra","opsArray","compras","compPond","getVentas","getPpventa","ventas","ventPond","getResTrading","ppcompra","ppventa","Math","min","getResPos","posicion","round","update","state","action","type","sure","confirm","whichOp","parseInt","newOpsKeys","filter","newOps","includes","celda","whichCellOp","slice","prop","value"],"mappings":"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","sourcesContent":["\n\nconst sumaCompras = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto\n  } else {\n    return acum\n  }\n}\n\nconst comprasPonderadas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum + op.monto * op.precio\n  } else {\n    return acum\n  }\n}\n\nconst ventasPonderadas = (acum, op) => {\n  if (op.cv === 'Venta') {\n    return acum + op.monto * op.precio\n  } else {\n    return acum\n  }\n}\n\nconst sumaVentas = (acum, op) => {\n  if (op.cv === 'Compra') {\n    return acum\n  } else {\n    return acum + op.monto\n  }\n}\n\nconst initialState = {\n  fecha: '1969-01-12',\n  bid: 700.00,\n  ask: 700.30,\n  ops: {\n    1: {numop: 1, cliente: 'Santander', fxrate: 'USDCLP', cv: 'Compra', monto: 1000000, precio: 700, editable: false},\n    2: {numop: 2, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Venta', monto: 3000000, precio: 701, editable: false},\n    3: {numop: 3, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Venta', monto: 3000000, precio: 702, editable: false},\n    4: {numop: 4, cliente: 'Estado', fxrate: 'USDCLP', cv: 'Compra', monto: 1000000, precio: 701, editable: false},\n  },\n  nextNumop: 5,\n  getOpsArray: function() {\n    return Object.keys(this.ops).map(key => this.ops[key])\n  },\n  getCompras: function() {\n    const opArr = Object.keys(this.ops).map(key => this.ops[key])\n    return opArr.reduce(sumaCompras, 0)\n  },\n  getPpcompra: function() {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key])\n    const compras = opsArray.reduce(sumaCompras, 0)\n    const compPond = opsArray.reduce(comprasPonderadas, 0)\n    return compras > 0 ? compPond / compras : 0\n  },\n  getVentas: function() {\n  const opArr = Object.keys(this.ops).map(key => this.ops[key])\n  return opArr.reduce(sumaVentas, 0)\n},\n  getPpventa: function() {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key])\n    const ventas = opsArray.reduce(sumaVentas, 0)\n    const ventPond = opsArray.reduce(ventasPonderadas, 0)\n    return ventas > 0 ? ventPond / ventas : 0\n  },\n\n  getResTrading: function() {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key])\n    const compras = opsArray.reduce(sumaCompras, 0)\n    const compPond = opsArray.reduce(comprasPonderadas, 0)\n    const ppcompra =  compras > 0 ? compPond / compras : 0\n    const ventas = opsArray.reduce(sumaVentas, 0)\n    const ventPond = opsArray.reduce(ventasPonderadas, 0)\n    const ppventa = ventas > 0 ? ventPond / ventas : 0\n    return Math.min(compras, ventas) * (ppventa - ppcompra)\n  },\n  getResPos: function(bid, ask) {\n    const opsArray = Object.keys(this.ops).map(key => this.ops[key])\n    const compras = opsArray.reduce(sumaCompras, 0)\n    const compPond = opsArray.reduce(comprasPonderadas, 0)\n    const ppcompra =  compras > 0 ? compPond / compras : 0\n    const ventas = opsArray.reduce(sumaVentas, 0)\n    const ventPond = opsArray.reduce(ventasPonderadas, 0)\n    const ppventa = ventas > 0 ? ventPond / ventas : 0\n    const posicion = compras - ventas\n    return Math.round(posicion > 0 ? posicion * (bid - ppcompra) : - posicion * (ppventa - ask))\n  }\n}\n\nconst update = (state = initialState, action) => {\n  if (action.type === 'PUNTA') {\n    return {...state, bid: action.bid, ask: action.ask}\n  }\n\n  if (action.type === 'ELIM_OP') {\n    // eslint-disable-next-line no-restricted-globals\n    const sure = confirm('¿Está seguro de eliminar la operación ' + action.whichOp + '?')\n    if (!sure) {\n      return state\n    }\n    const whichOp = parseInt(action.whichOp)\n    const newOpsKeys = Object.keys(state.ops).filter(key => state.ops[key].numop !== whichOp)\n    let newOps = {}\n    for (let key in state.ops) {\n      if (newOpsKeys.includes(key)) {\n        newOps[key] = state.ops[key]\n      }\n    }\n    return {...state, ops: newOps}\n  }\n\n  if (action.type === 'EDIT_OP') {\n    const whichOp = parseInt(action.whichOp)\n    const editable = state.ops[whichOp].editable\n    return {...state, ops: {...state.ops, [whichOp]: {...state.ops[whichOp], editable: !editable}}}\n  }\n\n  if (action.type === 'EDIT_CELDA') {\n    const celda = action.whichCellOp.slice(0, 2)\n    const prop = {'cl': 'cliente', 'fx': 'fxrate', 'cv': 'cv', 'mn': 'monto', 'pr': 'precio'}\n    const op = action.whichCellOp.slice(3)\n    const value = action.value\n    return {...state, ops: {...state.ops, [op]: {...state.ops[op], [prop[celda]]: value}}}\n  }\n\n  return state\n}\n\nexport default update"]},"metadata":{},"sourceType":"module"}